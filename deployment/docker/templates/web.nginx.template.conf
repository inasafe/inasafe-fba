upstream postgrest {
    server {{ POSTGREST_SERVER }};
}

upstream swagger {
    server {{ SWAGGER_SERVER }};
}

server {
    listen       80;
    server_name  localhost;

    charset utf-8;
    access_log  /var/log/nginx/host.access.log  main;

    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }

    # proxy the PHP scripts to Apache listening on 127.0.0.1:80
    #
    #location ~ \.php$ {
    #    proxy_pass   http://127.0.0.1;
    #}

    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
    #
    #location ~ \.php$ {
    #    root           html;
    #    fastcgi_pass   127.0.0.1:9000;
    #    fastcgi_index  index.php;
    #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
    #    include        fastcgi_params;
    #}

    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    #
    #location ~ /\.ht {
    #    deny  all;
    #}

    gzip on;
    gzip_min_length 860;
    gzip_comp_level 5;
    gzip_proxied expired no-cache no-store private auth;
    gzip_types text/plain application/xml application/x-javascript text/xml text/css application/json;
    gzip_disable "MSIE [1-6].(?!.*SV1)";

    # Its probably someone nefarious probing for vulnerabilities...
    location ~ (\.php|.aspx|.asp|myadmin) {
        return 404;
    }

    location /api-ui/ {
        proxy_pass http://swagger;

        rewrite ^/api-ui/(.*)$ /$1 break;

        client_max_body_size 150M;
        client_body_buffer_size 128K;
        add_header Access-Control-Allow-Credentials false;
        add_header Access-Control-Allow-Headers "Content-Type, Accept, Authorization, Origin, User-Agent";
        add_header Access-Control-Allow-Methods "GET, POST, PUT, PATCH, OPTIONS";
        proxy_set_header X-Forwarded-Protocol $scheme;
        proxy_connect_timeout 10000;
        proxy_send_timeout 10000;
        proxy_read_timeout 10000;
        send_timeout 10000;
        proxy_redirect     off;
        proxy_set_header   Host $host;
        proxy_set_header   X-Real-IP $remote_addr;
        proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Host $server_name;

    }

    location /api/ {
        proxy_pass http://postgrest;

        rewrite ^/api/(.*)$ /$1 break;

        client_max_body_size 150M;
        client_body_buffer_size 128K;
        add_header Access-Control-Allow-Credentials false;
        add_header Access-Control-Allow-Headers "Content-Type, Accept, Authorization, Origin, User-Agent";
        add_header Access-Control-Allow-Methods "GET, POST, PUT, PATCH, OPTIONS";
        proxy_set_header X-Forwarded-Protocol $scheme;
        proxy_connect_timeout 10000;
        proxy_send_timeout 10000;
        proxy_read_timeout 10000;
        send_timeout 10000;
        proxy_redirect     off;
        proxy_set_header   Host $host;
        proxy_set_header   X-Real-IP $remote_addr;
        proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Host $server_name;

    }

    # For hosting binary files for other components
    location /_archive {
        alias /opt/inasafe-fba/archive;
    }

    location / {
        root   /usr/share/nginx/app-dashboard;
        index  dashboard.html;
    }
}
