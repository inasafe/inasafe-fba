language: python

sudo: true

python: 3.7

services:
  - docker

env:
  # HTTP Port for the whole stack (nginx frontend proxy)
  # We can't use port 80 on travis
  - HTTP_PORT=8080
    WMS_BASE_URL=http://fbf.test:8080/geoserver/wms
    GEOSERVER_BASE_URL=http://fbf.test:8080/geoserver
    POSTGREST_BASE_URL=http://fbf.test:8080/api
    PGRST_SERVER_PROXY_URI=http://fbf.test:8080/api

addons:
  hosts:
    - fbf.test
    - postgrest.fbf.test
    - swagger.fbf.test
    - geoserver.fbf.test

before_install:
  # We use makefile to control build
  - sudo apt -y update; sudo apt -y install make zip wget curl net-tools
  # We use dnsmasq to resolve domain name
  - pushd fixtures/tests/scripts
  - sudo bash extract-interface-ip.sh
  - export IP_ADDR=$(cat ip-address.txt)
  - echo $IP_ADDR
  - sudo bash modify-dnsmasq-config.sh
  - popd

before_script:
  # Frontend deployment
  - sudo netstat -tulnp
  - pushd deployment
  - cp .sample.env .env
  - cp docker-compose.override.local-volumes.yml docker-compose.override.yml
  - popd
  # Docker OSM backend
  - pushd docker-osm/indonesia-buildings
  - make prepare-integration-tests
  - popd
  # Geoserver
  - pushd geoserver
  - cp .sample.env .env
  - cp docker-compose.override.local-volumes.yml docker-compose.override.yml
  - popd
  # Schema and test data preparations
  - pushd deployment
  - make up
  - make geoserver-up
  - make backend-up SERVICE=db
  - make wait-db-ready
  # Twice because db is restarting when initialized
  - make wait-db-ready
  - make backend-up SERVICE=imposm
  - make backend-first-pbf-import
  - make backend-wait-first-pbf-import
  - make backend-stop SERVICE=imposm
  - make backend-schema-test
  - make wait-geoserver-ready
  - make backend-populate-test-data
  - make backend-up SERVICE=testrunner
  - make backend-up SERVICE=postgrest
  - make backend-up SERVICE=swagger
  - make wait-backend-ready
  - popd

script:
  # Backend deployment tests
  - pushd deployment
  - make backend-test
  # forecast test
  # forecast test needs hazard map model
  - make backend-import-fixtures TARGET=tests/backend/data/sql/hazard_map.sql
  - make backend-forecast-test
  - popd
